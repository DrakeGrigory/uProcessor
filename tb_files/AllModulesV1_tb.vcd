$date
	Tue Nov 19 18:55:41 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module AllModulesV1_tb $end
$var wire 6 ! PM_Ins [5:0] $end
$var wire 5 " PC_Addr [4:0] $end
$var wire 1 # ID_nResetCY $end
$var wire 1 $ ID_RegCE $end
$var wire 4 % ID_RegAddr [3:0] $end
$var wire 1 & ID_CY_CE $end
$var wire 1 ' ID_A_CE $end
$var wire 3 ( ID_ALUCode [2:0] $end
$var reg 1 ) clk_tb $end
$var reg 1 * nReset_tb $end
$scope module ID $end
$var wire 2 + RNum [1:0] $end
$var wire 4 , OpCode [3:0] $end
$var wire 6 - Ins [5:0] $end
$var wire 3 . ALUCodeWire [2:0] $end
$var reg 3 / ALUCode [2:0] $end
$var reg 1 ' A_CE $end
$var reg 1 & CY_CE $end
$var reg 4 0 RegAddr [3:0] $end
$var reg 1 $ Reg_CE $end
$var reg 1 # nResetCY $end
$upscope $end
$scope module PC $end
$var wire 1 ) clk $end
$var wire 1 * nReset $end
$var reg 5 1 addr [4:0] $end
$upscope $end
$scope module PM $end
$var wire 6 2 InsOut [5:0] $end
$var wire 5 3 addr [4:0] $end
$var integer 32 4 i [31:0] $end
$upscope $end
$scope module RF_ALU_CY_A_module1 $end
$var wire 3 5 ALUCode [2:0] $end
$var wire 1 ' A_CE $end
$var wire 1 & CY_CE $end
$var wire 4 6 RegAddr [3:0] $end
$var wire 1 $ RegCE $end
$var wire 1 ) clk $end
$var wire 1 * nReset $end
$var wire 1 # nResetCY $end
$var wire 1 7 RegCY_Q $end
$var wire 8 8 RF_2_ALU [7:0] $end
$var wire 8 9 A_out [7:0] $end
$var wire 1 : ALU_Co $end
$var wire 8 ; ALU_2_A [7:0] $end
$scope module A $end
$var wire 1 ' CE $end
$var wire 1 ) clk $end
$var wire 1 * nReset $end
$var wire 8 < D [7:0] $end
$var parameter 32 = SET $end
$var parameter 32 > SIZE $end
$var reg 8 ? Q [7:0] $end
$upscope $end
$scope module ALU_1 $end
$var wire 8 @ A [7:0] $end
$var wire 3 A ALUCode [2:0] $end
$var wire 8 B R [7:0] $end
$var wire 1 7 Ci $end
$var reg 1 : Co $end
$var reg 8 C out [7:0] $end
$upscope $end
$scope module RF $end
$var wire 8 D A [7:0] $end
$var wire 1 $ RegCE $end
$var wire 4 E RegNum [3:0] $end
$var wire 1 ) clk $end
$var wire 1 * nReset $end
$var reg 8 F out [7:0] $end
$scope module R0 $end
$var wire 1 G CE $end
$var wire 8 H D [7:0] $end
$var wire 1 ) clk $end
$var wire 1 * nReset $end
$var parameter 32 I SET $end
$var parameter 32 J SIZE $end
$var reg 8 K Q [7:0] $end
$upscope $end
$scope module R1 $end
$var wire 1 L CE $end
$var wire 8 M D [7:0] $end
$var wire 1 ) clk $end
$var wire 1 * nReset $end
$var parameter 32 N SET $end
$var parameter 32 O SIZE $end
$var reg 8 P Q [7:0] $end
$upscope $end
$scope module R2 $end
$var wire 1 Q CE $end
$var wire 8 R D [7:0] $end
$var wire 1 ) clk $end
$var wire 1 * nReset $end
$var parameter 32 S SET $end
$var parameter 32 T SIZE $end
$var reg 8 U Q [7:0] $end
$upscope $end
$scope module R3 $end
$var wire 1 V CE $end
$var wire 8 W D [7:0] $end
$var wire 1 ) clk $end
$var wire 1 * nReset $end
$var parameter 32 X SET $end
$var parameter 32 Y SIZE $end
$var reg 8 Z Q [7:0] $end
$upscope $end
$upscope $end
$scope module RegCY $end
$var wire 1 & CE $end
$var wire 1 : D $end
$var wire 1 ) clk $end
$var wire 1 [ nReset $end
$var parameter 32 \ SET $end
$var parameter 32 ] SIZE $end
$var reg 1 7 Q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 ]
b0 \
b1000 Y
b100 X
b1000 T
b10 S
b1000 O
b1 N
b1000 J
b0 I
b1000 >
b0 =
$end
#0
$dumpvars
0[
bx Z
bx W
0V
bx U
bx R
0Q
bx P
bx M
0L
bx K
bx H
0G
bx F
b10 E
bx D
bx C
bx B
b0 A
bx @
bx ?
bx <
bx ;
x:
bx 9
bx 8
x7
b10 6
b0 5
b11111 4
b0 3
b1 2
b0 1
b10 0
b0 /
b0 .
b1 -
b0 ,
b1 +
0*
0)
b0 (
1'
1&
b10 %
0$
1#
b0 "
b1 !
$end
#5000
0:
b1 ;
b1 <
b1 C
b1 8
b1 B
b1 F
b0 K
b1 P
b10 U
b100 Z
07
b0 9
b0 ?
b0 @
b0 D
b0 H
b0 M
b0 R
b0 W
1)
#6000
1[
1*
#10000
0)
#15000
b1 9
b1 ?
b1 @
b1 D
b1 H
b1 M
b1 R
b1 W
0:
b0 ;
b0 <
b0 C
b1 (
b1 /
b1 5
b1 A
b1 .
b1 ,
b101 !
b101 -
b101 2
b1 "
b1 1
b1 3
1)
#20000
0)
#25000
1:
b11111111 ;
b11111111 <
b11111111 C
b0 9
b0 ?
b0 @
b0 D
b0 H
b0 M
b0 R
b0 W
b10 "
b10 1
b10 3
1)
#30000
0)
#35000
b11111111 9
b11111111 ?
b11111111 @
b11111111 D
b11111111 H
b11111111 M
b11111111 R
b11111111 W
17
1:
b10 ;
b10 <
b10 C
b10 8
b10 B
b10 F
b0 (
b0 /
b0 5
b0 A
b100 %
b100 0
b100 6
b100 E
b0 .
b10 +
b0 ,
b10 !
b10 -
b10 2
b11 "
b11 1
b11 3
1)
#40000
0)
#45000
b10 9
b10 ?
b10 @
b10 D
b10 H
b10 M
b10 R
b10 W
0[
0:
b0 ;
b0 <
b0 C
b100 8
b100 B
b100 F
0#
0&
b10 (
b10 /
b10 5
b10 A
b1000 %
b1000 0
b1000 6
b1000 E
b10 .
b11 +
b10 ,
b1011 !
b1011 -
b1011 2
b100 "
b100 1
b100 3
1)
#50000
0)
#55000
b0 9
b0 ?
b0 @
b0 D
b0 H
b0 M
b0 R
b0 W
07
1[
b100 ;
b100 <
b100 C
1#
1&
b0 (
b0 /
b0 5
b0 A
b0 .
b0 ,
b11 !
b11 -
b11 2
b101 "
b101 1
b101 3
1)
#60000
0)
#65000
b100 9
b100 ?
b100 @
b100 D
b100 H
b100 M
b100 R
b100 W
0[
b0 ;
b0 <
b0 C
b0 8
b0 B
b0 F
0'
0#
0&
b111 (
b111 /
b111 5
b111 A
b0 %
b0 0
b0 6
b0 E
b111 .
bx +
b111 ,
b111xx !
b111xx -
b111xx 2
b110 "
b110 1
b110 3
1)
#70000
0)
#75000
b111 "
b111 1
b111 3
1)
#80000
0)
#85000
b1000 "
b1000 1
b1000 3
1)
#90000
0)
#95000
b1001 "
b1001 1
b1001 3
1)
#100000
0)
#105000
b1010 "
b1010 1
b1010 3
1)
#106000
