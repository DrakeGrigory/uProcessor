$date
	Thu Nov 14 13:33:22 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module PC_PP_BFM_tb $end
$var wire 1 ! PP_RegCE $end
$var wire 4 " PP_RegAddr [3:0] $end
$var wire 1 # PP_CY_CE $end
$var wire 1 $ PP_A_CE $end
$var wire 3 % PP_ALUCode [2:0] $end
$var wire 5 & PC_Addr [4:0] $end
$var reg 8 ' A_out_tb [7:0] $end
$var reg 1 ( clk_tb $end
$var reg 1 ) nReset_tb $end
$scope module PC1 $end
$var wire 1 ( clk $end
$var wire 1 ) nReset $end
$var reg 5 * addr [4:0] $end
$upscope $end
$scope module PP1 $end
$var wire 5 + addr [4:0] $end
$var reg 3 , ALUCode [2:0] $end
$var reg 1 $ A_CE $end
$var reg 1 # CY_CE $end
$var reg 4 - RegAddr [3:0] $end
$var reg 1 ! Reg_CE $end
$var reg 1 . ResetCY $end
$upscope $end
$scope module RF_ALU_CY_A_module1 $end
$var wire 3 / ALUCode [2:0] $end
$var wire 1 $ A_CE $end
$var wire 1 # CY_CE $end
$var wire 4 0 RegAddr [3:0] $end
$var wire 1 ! RegCE $end
$var wire 1 1 ResetCY $end
$var wire 1 ( clk $end
$var wire 1 ) nReset $end
$var wire 1 2 RegCY_Q $end
$var wire 8 3 RF_2_ALU [7:0] $end
$var wire 8 4 A_out [7:0] $end
$var wire 1 5 ALU_Co $end
$var wire 8 6 ALU_2_A [7:0] $end
$scope module A $end
$var wire 1 $ CE $end
$var wire 1 ( clk $end
$var wire 1 ) nReset $end
$var wire 8 7 D [7:0] $end
$var parameter 32 8 SET $end
$var parameter 32 9 SIZE $end
$var reg 8 : Q [7:0] $end
$upscope $end
$scope module ALU_1 $end
$var wire 8 ; A [7:0] $end
$var wire 3 < ALUCode [2:0] $end
$var wire 8 = R [7:0] $end
$var wire 1 2 Ci $end
$var reg 1 5 Co $end
$var reg 8 > out [7:0] $end
$upscope $end
$scope module RF $end
$var wire 8 ? A [7:0] $end
$var wire 1 ! RegCE $end
$var wire 4 @ RegNum [3:0] $end
$var wire 1 ( clk $end
$var wire 1 ) nReset $end
$var reg 8 A out [7:0] $end
$scope module R0 $end
$var wire 1 B CE $end
$var wire 8 C D [7:0] $end
$var wire 1 ( clk $end
$var wire 1 ) nReset $end
$var parameter 32 D SET $end
$var parameter 32 E SIZE $end
$var reg 8 F Q [7:0] $end
$upscope $end
$scope module R1 $end
$var wire 1 G CE $end
$var wire 8 H D [7:0] $end
$var wire 1 ( clk $end
$var wire 1 ) nReset $end
$var parameter 32 I SET $end
$var parameter 32 J SIZE $end
$var reg 8 K Q [7:0] $end
$upscope $end
$scope module R2 $end
$var wire 1 L CE $end
$var wire 8 M D [7:0] $end
$var wire 1 ( clk $end
$var wire 1 ) nReset $end
$var parameter 32 N SET $end
$var parameter 32 O SIZE $end
$var reg 8 P Q [7:0] $end
$upscope $end
$scope module R3 $end
$var wire 1 Q CE $end
$var wire 8 R D [7:0] $end
$var wire 1 ( clk $end
$var wire 1 ) nReset $end
$var parameter 32 S SET $end
$var parameter 32 T SIZE $end
$var reg 8 U Q [7:0] $end
$upscope $end
$upscope $end
$scope module RegCY $end
$var wire 1 # CE $end
$var wire 1 5 D $end
$var wire 1 ( clk $end
$var wire 1 V nReset $end
$var parameter 32 W SET $end
$var parameter 32 X SIZE $end
$var reg 1 2 Q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 X
b0 W
b1000 T
b100 S
b1000 O
b10 N
b1000 J
b1 I
b1000 E
b0 D
b1000 9
b0 8
$end
#0
$dumpvars
xV
bx U
bx R
0Q
bx P
bx M
0L
bx K
bx H
0G
bx F
bx C
0B
b0 A
b0 @
bx ?
b0 >
b0 =
b110 <
bx ;
bx :
b0 7
b0 6
05
bx 4
b0 3
x2
z1
b0 0
b110 /
1.
b0 -
b110 ,
b0 +
b0 *
0)
0(
b0 '
b0 &
b110 %
0$
0#
b0 "
0!
$end
#5000
b0 F
b1 K
b10 P
b100 U
02
b0 4
b0 :
b0 ;
b0 ?
b0 C
b0 H
b0 M
b0 R
1(
#6000
1V
1)
#10000
0(
#15000
0.
b1 &
b1 *
b1 +
1(
#20000
0(
#25000
b100 6
b100 7
b100 >
b100 3
b100 =
b100 A
1$
1#
b0 %
b0 ,
b0 /
b0 <
b1000 "
b1000 -
b1000 0
b1000 @
b10 &
b10 *
b10 +
1(
#30000
0(
#35000
b100 4
b100 :
b100 ;
b100 ?
b100 C
b100 H
b100 M
b100 R
b110 6
b110 7
b110 >
b10 3
b10 =
b10 A
b100 "
b100 -
b100 0
b100 @
b11 &
b11 *
b11 +
1(
#40000
0(
#45000
b110 4
b110 :
b110 ;
b110 ?
b110 C
b110 H
b110 M
b110 R
b111 6
b111 7
b111 >
b1 3
b1 =
b1 A
b10 "
b10 -
b10 0
b10 @
b100 &
b100 *
b100 +
1(
#50000
0(
#55000
b111 4
b111 :
b111 ;
b111 ?
b111 C
b111 H
b111 M
b111 R
b0 6
b0 7
b0 >
1B
b0 3
b0 =
b0 A
0$
0#
b111 %
b111 ,
b111 /
b111 <
1!
b1 "
b1 -
b1 0
b1 @
b101 &
b101 *
b101 +
1(
#60000
0(
#65000
b111 3
b111 =
b111 A
b111 F
b0 6
b0 7
b0 >
0B
1$
1#
b1 %
b1 ,
b1 /
b1 <
0!
b110 &
b110 *
b110 +
1(
#70000
0(
#75000
15
b0 4
b0 :
b0 ;
b0 ?
b0 C
b0 H
b0 M
b0 R
b11111110 6
b11111110 7
b11111110 >
b10 3
b10 =
b10 A
b100 "
b100 -
b100 0
b100 @
b111 &
b111 *
b111 +
1(
#80000
0(
#85000
05
12
b11111110 4
b11111110 :
b11111110 ;
b11111110 ?
b11111110 C
b11111110 H
b11111110 M
b11111110 R
b11111001 6
b11111001 7
b11111001 >
b100 3
b100 =
b100 A
b1000 "
b1000 -
b1000 0
b1000 @
b1000 &
b1000 *
b1000 +
1(
#90000
0(
#95000
b11110101 6
b11110101 7
b11110101 >
b11111001 4
b11111001 :
b11111001 ;
b11111001 ?
b11111001 C
b11111001 H
b11111001 M
b11111001 R
02
b1001 &
b1001 *
b1001 +
1(
#100000
0(
#105000
b11110101 4
b11110101 :
b11110101 ;
b11110101 ?
b11110101 C
b11110101 H
b11110101 M
b11110101 R
b11110100 6
b11110100 7
b11110100 >
b1 3
b1 =
b1 A
b10 "
b10 -
b10 0
b10 @
b1010 &
b1010 *
b1010 +
1(
#110000
0(
#115000
b11110100 4
b11110100 :
b11110100 ;
b11110100 ?
b11110100 C
b11110100 H
b11110100 M
b11110100 R
b1011 6
b1011 7
b1011 >
0#
b101 %
b101 ,
b101 /
b101 <
b1011 &
b1011 *
b1011 +
1(
#120000
0(
#125000
b1011 4
b1011 :
b1011 ;
b1011 ?
b1011 C
b1011 H
b1011 M
b1011 R
b1 6
b1 7
b1 >
b10 %
b10 ,
b10 /
b10 <
b1100 &
b1100 *
b1100 +
1(
#130000
0(
#135000
b1 4
b1 :
b1 ;
b1 ?
b1 C
b1 H
b1 M
b1 R
b0 6
b0 7
b0 >
b0 3
b0 =
b0 A
0$
b111 %
b111 ,
b111 /
b111 <
b1111 "
b1111 -
b1111 0
b1111 @
b1101 &
b1101 *
b1101 +
1(
#140000
0(
#145000
b1110 &
b1110 *
b1110 +
1(
#150000
0(
#155000
b1111 &
b1111 *
b1111 +
1(
#160000
0(
#165000
b10000 &
b10000 *
b10000 +
1(
#170000
0(
#175000
b10001 &
b10001 *
b10001 +
1(
#180000
0(
#185000
b10010 &
b10010 *
b10010 +
1(
#190000
0(
#195000
b10011 &
b10011 *
b10011 +
1(
#200000
0(
#205000
b10100 &
b10100 *
b10100 +
1(
#206000
