$date
	Thu Nov  7 16:41:07 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module PseudoPP_PC_tb $end
$var wire 1 ! PP_ResetCY $end
$var wire 1 " RegCY_Q $end
$var wire 8 # RF_2_ALU [7:0] $end
$var wire 1 $ PP_RegCE $end
$var wire 4 % PP_RegAddr [3:0] $end
$var wire 1 & PP_CY_CE $end
$var wire 1 ' PP_A_CE $end
$var wire 3 ( PP_ALUCode [2:0] $end
$var wire 5 ) PC_Addr [4:0] $end
$var wire 8 * A_out [7:0] $end
$var wire 1 + ALU_Co $end
$var wire 8 , ALU_2_A [7:0] $end
$var reg 8 - A_out_tb [7:0] $end
$var reg 1 . clk_tb $end
$var reg 1 / nReset_tb $end
$scope module A $end
$var wire 1 . clk $end
$var wire 1 / nReset $end
$var wire 8 0 D [7:0] $end
$var wire 1 ' CE $end
$var parameter 32 1 SET $end
$var parameter 32 2 SIZE $end
$var reg 8 3 Q [7:0] $end
$upscope $end
$scope module ALU_1 $end
$var wire 8 4 A [7:0] $end
$var wire 8 5 R [7:0] $end
$var wire 1 " Ci $end
$var wire 3 6 ALUCode [2:0] $end
$var reg 1 + Co $end
$var reg 8 7 out [7:0] $end
$upscope $end
$scope module PC1 $end
$var wire 1 . clk $end
$var wire 1 / nReset $end
$var reg 5 8 addr [4:0] $end
$upscope $end
$scope module PP1 $end
$var wire 5 9 addr [4:0] $end
$var reg 3 : ALUCode [2:0] $end
$var reg 1 ' A_CE $end
$var reg 1 & CY_CE $end
$var reg 4 ; RegAddr [3:0] $end
$var reg 1 $ Reg_CE $end
$var reg 1 < ResetCY $end
$upscope $end
$scope module RF $end
$var wire 8 = A [7:0] $end
$var wire 1 $ RegCE $end
$var wire 4 > RegNum [3:0] $end
$var wire 1 . clk $end
$var wire 1 / nReset $end
$var reg 8 ? out [7:0] $end
$scope module R0 $end
$var wire 1 @ CE $end
$var wire 8 A D [7:0] $end
$var wire 1 . clk $end
$var wire 1 / nReset $end
$var parameter 32 B SET $end
$var parameter 32 C SIZE $end
$var reg 8 D Q [7:0] $end
$upscope $end
$scope module R1 $end
$var wire 1 E CE $end
$var wire 8 F D [7:0] $end
$var wire 1 . clk $end
$var wire 1 / nReset $end
$var parameter 32 G SET $end
$var parameter 32 H SIZE $end
$var reg 8 I Q [7:0] $end
$upscope $end
$scope module R2 $end
$var wire 1 J CE $end
$var wire 8 K D [7:0] $end
$var wire 1 . clk $end
$var wire 1 / nReset $end
$var parameter 32 L SET $end
$var parameter 32 M SIZE $end
$var reg 8 N Q [7:0] $end
$upscope $end
$scope module R3 $end
$var wire 1 O CE $end
$var wire 8 P D [7:0] $end
$var wire 1 . clk $end
$var wire 1 / nReset $end
$var parameter 32 Q SET $end
$var parameter 32 R SIZE $end
$var reg 8 S Q [7:0] $end
$upscope $end
$upscope $end
$scope module RegCY $end
$var wire 1 & CE $end
$var wire 1 + D $end
$var wire 1 . clk $end
$var wire 1 T nReset $end
$var parameter 32 U SET $end
$var parameter 32 V SIZE $end
$var reg 1 " Q $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 V
b0 U
b1000 R
b100 Q
b1000 M
b10 L
b1000 H
b1 G
b1000 C
b0 B
b1000 2
b0 1
$end
#0
$dumpvars
xT
bx S
b10000010 P
0O
bx N
b10000010 K
0J
bx I
b10000010 F
0E
bx D
b10000010 A
0@
b0 ?
b0 >
b10000010 =
1<
b0 ;
b110 :
b0 9
b0 8
b0 7
b110 6
b0 5
bx 4
bx 3
b0 0
0/
0.
b10000010 -
b0 ,
0+
bx *
b0 )
b110 (
0'
0&
b0 %
0$
b0 #
x"
z!
$end
#5000
b0 D
b1 I
b10 N
b100 S
0"
b0 *
b0 3
b0 4
1.
#6000
1T
1/
#10000
0.
#15000
1'
0<
b1 %
b1 ;
b1 >
b1 )
b1 8
b1 9
1.
#20000
0.
#25000
1$
b0 %
b0 ;
b0 >
b10 )
b10 8
b10 9
1.
#30000
0.
#35000
b10 ,
b10 0
b10 7
b10 #
b10 5
b10 ?
0$
b100 %
b100 ;
b100 >
b11 )
b11 8
b11 9
1.
#40000
0.
#45000
b10 *
b10 3
b10 4
b0 #
b0 5
b0 ?
0'
b111 (
b111 6
b111 :
b1111 %
b1111 ;
b1111 >
b100 )
b100 8
b100 9
1.
#50000
0.
#55000
b101 )
b101 8
b101 9
1.
#60000
0.
#65000
b110 )
b110 8
b110 9
1.
#70000
0.
#75000
b111 )
b111 8
b111 9
1.
#76000
